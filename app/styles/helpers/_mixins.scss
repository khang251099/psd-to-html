@mixin absoluteCenter($direction) {
    position: absolute;
    // @if $variable = {}
    @if $direction== "left" {
        left: 50%;
        transform: translateX(-50%);
        //Chiều ngang
    }
    @if $direction== "top" {
        top: 50%;
        transform: translateY(-50%);
        //Chiều dọc
    }
    @if $direction== "both" {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}

@mixin absoluteFull() {
    position: absolute;
    //full
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin maxWidth($breakPoint) {
    @media screen and (max-width: $breakPoint) {
        @content;
    }
}

@mixin minWidth($breakPoint) {
    @media screen and (min-width: $breakPoint) {
        @content;
    }
}

@mixin textOverflow($line) {
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

@mixin hideScroll() {
    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
        display: none;
    }
}

@mixin hoverEffect($itemClass, $contentClass, $transform: "true") {
    #{$itemClass} {
        position: relative;
        z-index: 99999;
        transition: all 0.25s linear;
        #{$contentClass} {
            @include absoluteFull();
            background: linear-gradient(to bottom, rgba($primary-color, 0.7), rgba($secondary-color, 0.7));
            z-index: 999;
            line-height: 3;
            opacity: 0;
            visibility: hidden;
            transition: all 0.25s linear;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }
        @if $transform== "true" {
            &::after {
                content: "";
                @include absoluteFull();
                background-color: $third-color;
                z-index: -1;
            }
        }

        &:hover {
            #{$contentClass} {
                opacity: 1;
                visibility: visible;
            }
            @if $transform== "true" {
                transform: translate(-1rem, -1rem);
                &::after {
                    transform: translate(1rem, 1rem);
                    transition: all 0.25s linear;
                }
            }
        }
    }
}
